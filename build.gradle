apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'

mainClassName = "com.thoughtworks.fedex.ConsentServiceMain"

repositories {
    mavenCentral()
}

sourceCompatibility = '1.6'
targetCompatibility = '1.6'

project.ext {
    dropwizardVersion = '0.6.2'
    chefDir = "$projectDir/chef"
    chefFilesDir = "$chefDir/cookbooks/consent_service/files/default"
    knifeConfigFile = "$chefDir/.chef/knife.rb"
    knifeRoleFile = "$chefDir/roles/consent_service_server.rb"
}

run {
    args 'server', 'src/main/resources/consent.yaml'
}

dependencies {
    compile 'com.google.guava:guava:14.0.1'
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile "com.yammer.dropwizard:dropwizard-core:$dropwizardVersion"
    compile "com.yammer.dropwizard:dropwizard-db:$dropwizardVersion"
    compile "com.yammer.dropwizard:dropwizard-hibernate:$dropwizardVersion"
    compile "com.yammer.dropwizard:dropwizard-migrations:$dropwizardVersion"
    compile "org.hibernate:hibernate-core:4.2.4.Final"
    compile 'org.liquibase:liquibase-core:3.0.2'

    runtime 'com.h2database:h2:1.3.173'

    testCompile "junit:junit:4.11"
}

task uberjar(type: Jar, dependsOn: jar) {
    classifier = "standalone"

    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)

    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    exclude("META-INF/*.SF")
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")

    manifest {
        attributes 'Main-Class': mainClassName
    }
}

task cleanChef() << {
    file("$chefFilesDir/consent.yaml").delete()
    file("$chefFilesDir/consent_service-standalone.jar").delete()
}

task generateChef(type: Copy, dependsOn: [cleanChef, uberjar]) {
    from('src/main/resources/consent.yaml')
    from("$buildDir/libs/consent_service-standalone.jar")
    into chefFilesDir
}

private void chefExecute(String command) {
    println command.execute(null, new File(chefDir)).text
}

task uploadChef(dependsOn: generateChef) << {
    chefExecute("knife cookbook upload --all -c $knifeConfigFile")
    chefExecute("knife role from file $knifeRoleFile")
}
